从给定的列表alts中找出若干个数之和最接近于tgt_sum

undo1: 递归求解返回最优解（FindAddends_Recu.py）?

undo2:
	dif = abs(tgt_sum-sum(chosed_addends))
	每次选择与dif最接近的数作为下一个备选数，更新dif
	当没有备选数可选时改变最后进去的备选数
	
	eg:
		输入:
			tgt_sum = 3
			alts = [300, 800, -900, 901, -400, 402]
		搜索过程:
			[402]
			[402, -400]
			[402, -400, 800]
			[402, -400, 800, -900]
			[402, -400, 800, -900, 901]
			[402, -400, 800]
			[402, -400, 800, 901]
			[402, -400]
			[402, -400, 901]
			[402, -400, 901, -900]

undo3：
	解决此类问题的通用模式：
	用树结构来存储解决路径，如果遇到叶子节点之后问题没有最优解，则回溯到上一个父节点并从父节点开始创建新的解决路径
	